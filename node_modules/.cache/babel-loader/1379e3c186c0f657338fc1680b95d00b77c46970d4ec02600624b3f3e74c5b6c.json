{"ast":null,"code":"import _objectSpread from\"/Users/lukaszsikorra/Projects/plexi_appka/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// contexts/ProductContext.tsx\nimport React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ProductContext=/*#__PURE__*/createContext(undefined);export const ProductProvider=_ref=>{let{children}=_ref;const[selectedProductType,setSelectedProductType]=useState(null);const[productOptions,setProductOptions]=useState({});const updateProductOptions=(type,options)=>{setProductOptions(prev=>_objectSpread(_objectSpread({},prev),{},{[type]:options}));};return/*#__PURE__*/_jsx(ProductContext.Provider,{value:{selectedProductType,setSelectedProductType,productOptions,updateProductOptions},children:children});};export const useProduct=()=>{const context=useContext(ProductContext);if(!context){throw new Error('useProduct must be used within ProductProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","ProductContext","undefined","ProductProvider","_ref","children","selectedProductType","setSelectedProductType","productOptions","setProductOptions","updateProductOptions","type","options","prev","_objectSpread","Provider","value","useProduct","context","Error"],"sources":["/Users/lukaszsikorra/Projects/plexi_appka/src/contexts/ProductContext.tsx"],"sourcesContent":["// contexts/ProductContext.tsx\n\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\nimport { ProductType } from '../types/product.types';\n\ninterface ProductContextType {\n  selectedProductType: ProductType | null;\n  setSelectedProductType: (type: ProductType | null) => void;\n  productOptions: Record<string, any>;\n  updateProductOptions: (type: ProductType, options: any) => void;\n}\n\nconst ProductContext = createContext<ProductContextType | undefined>(undefined);\n\nexport const ProductProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [selectedProductType, setSelectedProductType] = useState<ProductType | null>(null);\n  const [productOptions, setProductOptions] = useState<Record<string, any>>({});\n\n  const updateProductOptions = (type: ProductType, options: any) => {\n    setProductOptions(prev => ({\n      ...prev,\n      [type]: options\n    }));\n  };\n\n  return (\n    <ProductContext.Provider value={{\n      selectedProductType,\n      setSelectedProductType,\n      productOptions,\n      updateProductOptions\n    }}>\n      {children}\n    </ProductContext.Provider>\n  );\n};\n\nexport const useProduct = () => {\n  const context = useContext(ProductContext);\n  if (!context) {\n    throw new Error('useProduct must be used within ProductProvider');\n  }\n  return context;\n};"],"mappings":"8HAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAU9E,KAAM,CAAAC,cAAc,cAAGL,aAAa,CAAiCM,SAAS,CAAC,CAE/E,MAAO,MAAM,CAAAC,eAAkD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7E,KAAM,CAACE,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGT,QAAQ,CAAqB,IAAI,CAAC,CACxF,KAAM,CAACU,cAAc,CAAEC,iBAAiB,CAAC,CAAGX,QAAQ,CAAsB,CAAC,CAAC,CAAC,CAE7E,KAAM,CAAAY,oBAAoB,CAAGA,CAACC,IAAiB,CAAEC,OAAY,GAAK,CAChEH,iBAAiB,CAACI,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACjBD,IAAI,MACP,CAACF,IAAI,EAAGC,OAAO,EACf,CAAC,CACL,CAAC,CAED,mBACEZ,IAAA,CAACC,cAAc,CAACc,QAAQ,EAACC,KAAK,CAAE,CAC9BV,mBAAmB,CACnBC,sBAAsB,CACtBC,cAAc,CACdE,oBACF,CAAE,CAAAL,QAAA,CACCA,QAAQ,CACc,CAAC,CAE9B,CAAC,CAED,MAAO,MAAM,CAAAY,UAAU,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,OAAO,CAAGrB,UAAU,CAACI,cAAc,CAAC,CAC1C,GAAI,CAACiB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,gDAAgD,CAAC,CACnE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}