{"ast":null,"code":"// calculators/calculateImpulsKasowy.ts\n\nimport { BENDING_PRICES } from '../constants/pricing';\nconst IMPULS_MULTIPLIER = 1.8;\nconst WASTE_PERCENTAGE = 0.05; // 5% odpadu\nconst DEFAULT_LIMITER_HEIGHT = 60; // mm\n\nexport function calculateImpulsKasowy(dimensions, options, quantity) {\n  const components = [];\n  const {\n    width,\n    height,\n    depth\n  } = dimensions;\n  const limiterHeight = options.features.customLimiterHeight ? options.limiterHeight : DEFAULT_LIMITER_HEIGHT;\n\n  // Cena materiału bazowego\n  const materialPricePerM2 = options.plexiType === 'white' ? 35 : 30;\n\n  // 1. PLECY\n  components.push({\n    name: 'Plecy',\n    type: 'wall',\n    dimensions: {\n      width,\n      height,\n      depth: 0\n    },\n    surface: width * height / 1e6,\n    weight: 0,\n    edgeLength: 2 * (width + height) / 1000,\n    materialCost: 0\n  });\n\n  // 2. BOKI (2 sztuki)\n  components.push({\n    name: 'Lewy bok',\n    type: 'wall',\n    dimensions: {\n      width: depth,\n      height,\n      depth: 0\n    },\n    surface: depth * height / 1e6,\n    weight: 0,\n    edgeLength: 2 * (depth + height) / 1000,\n    materialCost: 0\n  });\n  components.push({\n    name: 'Prawy bok',\n    type: 'wall',\n    dimensions: {\n      width: depth,\n      height,\n      depth: 0\n    },\n    surface: depth * height / 1e6,\n    weight: 0,\n    edgeLength: 2 * (depth + height) / 1000,\n    materialCost: 0\n  });\n\n  // 3. PÓŁKI Z OGRANICZNIKAMI\n  let totalBendingLength = 0;\n  for (let i = 0; i < options.shelvesCount; i++) {\n    // Półka\n    components.push({\n      name: `Półka ${i + 1}`,\n      type: 'shelf',\n      dimensions: {\n        width,\n        height: depth,\n        depth: 0\n      },\n      surface: width * depth / 1e6,\n      weight: 0,\n      edgeLength: 2 * (width + depth) / 1000,\n      materialCost: 0\n    });\n\n    // Ogranicznik (zagięty front półki)\n    components.push({\n      name: `Ogranicznik półki ${i + 1}`,\n      type: 'limiter',\n      dimensions: {\n        width,\n        height: limiterHeight,\n        depth: 0\n      },\n      surface: width * limiterHeight / 1e6,\n      weight: 0,\n      edgeLength: 2 * (width + limiterHeight) / 1000,\n      materialCost: 0\n    });\n\n    // Długość gięcia dla ogranicznika\n    totalBendingLength += width / 1000; // konwersja na metry\n  }\n\n  // 4. OBLICZENIA POWIERZCHNI I KOSZTÓW\n  const totalSurface = components.reduce((sum, c) => sum + c.surface, 0);\n  const surfaceWithWaste = totalSurface * (1 + WASTE_PERCENTAGE);\n\n  // Koszt materiału z mnożnikiem\n  const materialCost = surfaceWithWaste * materialPricePerM2 * options.thickness * IMPULS_MULTIPLIER * quantity;\n\n  // Koszt gięcia na gorąco\n  const bendingPricePerMeter = BENDING_PRICES[options.thickness] || 5;\n  const bendingCost = totalBendingLength * bendingPricePerMeter * quantity;\n\n  // 5. GRAFIKA (bez mnożnika)\n  let graphicsCost = 0;\n  let graphicsSurface = 0;\n  if (options.graphics.enabled && options.graphics.type !== 'none') {\n    // Powierzchnia do pokrycia grafiką\n    if (options.graphics.coverage === 'back-only') {\n      // Tylko plecy\n      graphicsSurface = width * height / 1e6;\n    } else {\n      // Plecy + boki\n      graphicsSurface = (width * height + 2 * (depth * height)) / 1e6;\n    }\n    const graphicsPrice = options.graphics.type === 'double' ? 150 : 75;\n    graphicsCost = graphicsSurface * graphicsPrice * quantity;\n  }\n\n  // 6. KOSZTY DODATKÓW\n  const additionalCosts = [];\n  if (options.features.reinforcedShelves) {\n    // Dodatkowa grubość półek (+50% kosztu półek)\n    const shelvesCost = components.filter(c => c.type === 'shelf').reduce((sum, c) => sum + c.surface, 0) * materialPricePerM2 * options.thickness * 0.5 * quantity;\n    additionalCosts.push({\n      name: 'Wzmocnienie półek',\n      cost: shelvesCost\n    });\n  }\n  if (options.features.roundedCorners) {\n    additionalCosts.push({\n      name: 'Zaokrąglanie rogów',\n      cost: 25 * quantity // stała cena za sztukę\n    });\n  }\n  if (options.features.antiSlipStrips) {\n    additionalCosts.push({\n      name: 'Paski antypoślizgowe',\n      cost: options.shelvesCount * 5 * quantity // 5 zł za półkę\n    });\n  }\n  const totalAdditionalCosts = additionalCosts.reduce((sum, item) => sum + item.cost, 0);\n\n  // 7. WAGA (przyjmując gęstość plexi 1190 kg/m³)\n  const plexiDensity = 1190; // kg/m³\n  const totalWeight = totalSurface * (options.thickness / 1000) * plexiDensity * quantity;\n\n  // 8. PODSUMOWANIE\n  const totalCost = materialCost + bendingCost + graphicsCost + totalAdditionalCosts;\n  const filteredComponents = components.filter(c => c.type === 'wall' || c.type === 'shelf' || c.type === 'limiter').map(c => ({\n    name: c.name,\n    type: c.type,\n    surface: c.surface,\n    bendingLength: c.type === 'limiter' ? width / 1000 : undefined\n  }));\n  return {\n    components: filteredComponents,\n    materialCost,\n    graphicsCost,\n    bendingCost,\n    totalCost,\n    shelvesDimensions: {\n      shelfDepth: depth,\n      limiterHeight: limiterHeight,\n      totalDepthWithLimiter: depth + limiterHeight\n    },\n    totalSurface: totalSurface * quantity,\n    totalWeight\n  };\n}\n\n// Funkcja pomocnicza do generowania listy dodatków dla systemu\nexport function getImpulsAddons(options, dimensions, quantity) {\n  const addons = [];\n\n  // Gięcie na gorąco\n  const bendingLength = dimensions.width * options.shelvesCount / 1000;\n  const bendingPrice = BENDING_PRICES[options.thickness] || 5;\n  addons.push({\n    name: 'Gięcie na gorąco ograniczników',\n    quantity: bendingLength * quantity,\n    unit: 'mb',\n    unitPrice: bendingPrice,\n    totalPrice: bendingLength * bendingPrice * quantity,\n    appliesToMultiplier: false\n  });\n\n  // Grafika\n  if (options.graphics.enabled && options.graphics.type !== 'none') {\n    let graphicsSurface = 0;\n    if (options.graphics.coverage === 'back-only') {\n      graphicsSurface = dimensions.width * dimensions.height / 1e6;\n    } else {\n      graphicsSurface = (dimensions.width * dimensions.height + 2 * (dimensions.depth * dimensions.height)) / 1e6;\n    }\n    addons.push({\n      name: `Grafika ${options.graphics.type === 'double' ? 'dwustronna' : 'jednostronna'}`,\n      quantity: graphicsSurface * quantity,\n      unit: 'm²',\n      unitPrice: options.graphics.type === 'double' ? 150 : 75,\n      totalPrice: graphicsSurface * (options.graphics.type === 'double' ? 150 : 75) * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Wzmocnione półki\n  if (options.features.reinforcedShelves) {\n    addons.push({\n      name: 'Wzmocnienie półek',\n      quantity: options.shelvesCount * quantity,\n      unit: 'szt',\n      unitPrice: 15,\n      totalPrice: options.shelvesCount * 15 * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Zaokrąglone rogi\n  if (options.features.roundedCorners) {\n    addons.push({\n      name: 'Zaokrąglanie rogów',\n      quantity: quantity,\n      unit: 'szt',\n      unitPrice: 25,\n      totalPrice: 25 * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Paski antypoślizgowe\n  if (options.features.antiSlipStrips) {\n    addons.push({\n      name: 'Paski antypoślizgowe',\n      quantity: options.shelvesCount * quantity,\n      unit: 'kpl',\n      unitPrice: 5,\n      totalPrice: options.shelvesCount * 5 * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Elementy montażowe\n  addons.push({\n    name: 'Kątowniki montażowe',\n    quantity: (4 + options.shelvesCount * 2) * quantity,\n    unit: 'szt',\n    unitPrice: 1.5,\n    totalPrice: (4 + options.shelvesCount * 2) * 1.5 * quantity,\n    appliesToMultiplier: false\n  });\n  return addons;\n}","map":{"version":3,"names":["BENDING_PRICES","IMPULS_MULTIPLIER","WASTE_PERCENTAGE","DEFAULT_LIMITER_HEIGHT","calculateImpulsKasowy","dimensions","options","quantity","components","width","height","depth","limiterHeight","features","customLimiterHeight","materialPricePerM2","plexiType","push","name","type","surface","weight","edgeLength","materialCost","totalBendingLength","i","shelvesCount","totalSurface","reduce","sum","c","surfaceWithWaste","thickness","bendingPricePerMeter","bendingCost","graphicsCost","graphicsSurface","graphics","enabled","coverage","graphicsPrice","additionalCosts","reinforcedShelves","shelvesCost","filter","cost","roundedCorners","antiSlipStrips","totalAdditionalCosts","item","plexiDensity","totalWeight","totalCost","filteredComponents","map","bendingLength","undefined","shelvesDimensions","shelfDepth","totalDepthWithLimiter","getImpulsAddons","addons","bendingPrice","unit","unitPrice","totalPrice","appliesToMultiplier"],"sources":["/Users/lukaszsikorra/Projects/plexi_appka/src/calculators/calculateImpulsKasowy.ts"],"sourcesContent":["// calculators/calculateImpulsKasowy.ts\n\nimport { ImpulsKasowyOptions, ImpulsCalculationResult } from '../types/impuls.types';\nimport { ComponentCalculation } from '../types/calculator.types';\nimport { BENDING_PRICES } from '../constants/pricing';\n\nconst IMPULS_MULTIPLIER = 1.8;\nconst WASTE_PERCENTAGE = 0.05; // 5% odpadu\nconst DEFAULT_LIMITER_HEIGHT = 60; // mm\n\nexport function calculateImpulsKasowy(\n  dimensions: { width: number; height: number; depth: number },\n  options: ImpulsKasowyOptions,\n  quantity: number\n): ImpulsCalculationResult {\n  const components: ComponentCalculation[] = [];\n  const { width, height, depth } = dimensions;\n  const limiterHeight = options.features.customLimiterHeight \n    ? options.limiterHeight \n    : DEFAULT_LIMITER_HEIGHT;\n\n  // Cena materiału bazowego\n  const materialPricePerM2 = options.plexiType === 'white' ? 35 : 30;\n\n  // 1. PLECY\n  components.push({\n    name: 'Plecy',\n    type: 'wall',\n    dimensions: { width, height, depth: 0 },\n    surface: (width * height) / 1e6,\n    weight: 0,\n    edgeLength: 2 * (width + height) / 1000,\n    materialCost: 0\n  });\n\n  // 2. BOKI (2 sztuki)\n  components.push({\n    name: 'Lewy bok',\n    type: 'wall',\n    dimensions: { width: depth, height, depth: 0 },\n    surface: (depth * height) / 1e6,\n    weight: 0,\n    edgeLength: 2 * (depth + height) / 1000,\n    materialCost: 0\n  });\n\n  components.push({\n    name: 'Prawy bok',\n    type: 'wall',\n    dimensions: { width: depth, height, depth: 0 },\n    surface: (depth * height) / 1e6,\n    weight: 0,\n    edgeLength: 2 * (depth + height) / 1000,\n    materialCost: 0\n  });\n\n  // 3. PÓŁKI Z OGRANICZNIKAMI\n  let totalBendingLength = 0;\n  \n  for (let i = 0; i < options.shelvesCount; i++) {\n    // Półka\n    components.push({\n      name: `Półka ${i + 1}`,\n      type: 'shelf',\n      dimensions: { width, height: depth, depth: 0 },\n      surface: (width * depth) / 1e6,\n      weight: 0,\n      edgeLength: 2 * (width + depth) / 1000,\n      materialCost: 0\n    });\n\n    // Ogranicznik (zagięty front półki)\n    components.push({\n      name: `Ogranicznik półki ${i + 1}`,\n      type: 'limiter',\n      dimensions: { width, height: limiterHeight, depth: 0 },\n      surface: (width * limiterHeight) / 1e6,\n      weight: 0,\n      edgeLength: 2 * (width + limiterHeight) / 1000,\n      materialCost: 0\n    });\n\n    // Długość gięcia dla ogranicznika\n    totalBendingLength += width / 1000; // konwersja na metry\n  }\n\n  // 4. OBLICZENIA POWIERZCHNI I KOSZTÓW\n  const totalSurface = components.reduce((sum, c) => sum + c.surface, 0);\n  const surfaceWithWaste = totalSurface * (1 + WASTE_PERCENTAGE);\n\n  // Koszt materiału z mnożnikiem\n  const materialCost = surfaceWithWaste * materialPricePerM2 * options.thickness * \n                      IMPULS_MULTIPLIER * quantity;\n\n  // Koszt gięcia na gorąco\n  const bendingPricePerMeter = BENDING_PRICES[options.thickness as keyof typeof BENDING_PRICES] || 5;\n  const bendingCost = totalBendingLength * bendingPricePerMeter * quantity;\n\n  // 5. GRAFIKA (bez mnożnika)\n  let graphicsCost = 0;\n  let graphicsSurface = 0;\n\n  if (options.graphics.enabled && options.graphics.type !== 'none') {\n    // Powierzchnia do pokrycia grafiką\n    if (options.graphics.coverage === 'back-only') {\n      // Tylko plecy\n      graphicsSurface = (width * height) / 1e6;\n    } else {\n      // Plecy + boki\n      graphicsSurface = ((width * height) + 2 * (depth * height)) / 1e6;\n    }\n\n    const graphicsPrice = options.graphics.type === 'double' ? 150 : 75;\n    graphicsCost = graphicsSurface * graphicsPrice * quantity;\n  }\n\n  // 6. KOSZTY DODATKÓW\n  const additionalCosts: Array<{\n    name: string;\n    cost: number;\n  }> = [];\n\n  if (options.features.reinforcedShelves) {\n    // Dodatkowa grubość półek (+50% kosztu półek)\n    const shelvesCost = components\n      .filter(c => c.type === 'shelf')\n      .reduce((sum, c) => sum + c.surface, 0) * \n      materialPricePerM2 * options.thickness * 0.5 * quantity;\n    \n    additionalCosts.push({\n      name: 'Wzmocnienie półek',\n      cost: shelvesCost\n    });\n  }\n\n  if (options.features.roundedCorners) {\n    additionalCosts.push({\n      name: 'Zaokrąglanie rogów',\n      cost: 25 * quantity // stała cena za sztukę\n    });\n  }\n\n  if (options.features.antiSlipStrips) {\n    additionalCosts.push({\n      name: 'Paski antypoślizgowe',\n      cost: options.shelvesCount * 5 * quantity // 5 zł za półkę\n    });\n  }\n\n  const totalAdditionalCosts = additionalCosts.reduce((sum, item) => sum + item.cost, 0);\n\n  // 7. WAGA (przyjmując gęstość plexi 1190 kg/m³)\n  const plexiDensity = 1190; // kg/m³\n  const totalWeight = totalSurface * (options.thickness / 1000) * plexiDensity * quantity;\n\n  // 8. PODSUMOWANIE\n  const totalCost = materialCost + bendingCost + graphicsCost + totalAdditionalCosts;\n\n  const filteredComponents = components\n    .filter(c => c.type === 'wall' || c.type === 'shelf' || c.type === 'limiter')\n    .map(c => ({\n      name: c.name,\n      type: c.type as 'wall' | 'shelf' | 'limiter',\n      surface: c.surface,\n      bendingLength: c.type === 'limiter' ? width / 1000 : undefined\n    }));\n\n  return {\n    components: filteredComponents,\n    materialCost,\n    graphicsCost,\n    bendingCost,\n    totalCost,\n    shelvesDimensions: {\n      shelfDepth: depth,\n      limiterHeight: limiterHeight,\n      totalDepthWithLimiter: depth + limiterHeight\n    },\n    totalSurface: totalSurface * quantity,\n    totalWeight\n  };\n}\n\n// Funkcja pomocnicza do generowania listy dodatków dla systemu\nexport function getImpulsAddons(\n  options: ImpulsKasowyOptions,\n  dimensions: { width: number; height: number; depth: number },\n  quantity: number\n): Array<{\n  name: string;\n  quantity: number;\n  unit: string;\n  unitPrice: number;\n  totalPrice: number;\n  appliesToMultiplier: boolean;\n}> {\n  const addons = [];\n\n  // Gięcie na gorąco\n  const bendingLength = (dimensions.width * options.shelvesCount) / 1000;\n  const bendingPrice = BENDING_PRICES[options.thickness as keyof typeof BENDING_PRICES] || 5;\n  \n  addons.push({\n    name: 'Gięcie na gorąco ograniczników',\n    quantity: bendingLength * quantity,\n    unit: 'mb',\n    unitPrice: bendingPrice,\n    totalPrice: bendingLength * bendingPrice * quantity,\n    appliesToMultiplier: false\n  });\n\n  // Grafika\n  if (options.graphics.enabled && options.graphics.type !== 'none') {\n    let graphicsSurface = 0;\n    \n    if (options.graphics.coverage === 'back-only') {\n      graphicsSurface = (dimensions.width * dimensions.height) / 1e6;\n    } else {\n      graphicsSurface = ((dimensions.width * dimensions.height) + \n                        2 * (dimensions.depth * dimensions.height)) / 1e6;\n    }\n\n    addons.push({\n      name: `Grafika ${options.graphics.type === 'double' ? 'dwustronna' : 'jednostronna'}`,\n      quantity: graphicsSurface * quantity,\n      unit: 'm²',\n      unitPrice: options.graphics.type === 'double' ? 150 : 75,\n      totalPrice: graphicsSurface * (options.graphics.type === 'double' ? 150 : 75) * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Wzmocnione półki\n  if (options.features.reinforcedShelves) {\n    addons.push({\n      name: 'Wzmocnienie półek',\n      quantity: options.shelvesCount * quantity,\n      unit: 'szt',\n      unitPrice: 15,\n      totalPrice: options.shelvesCount * 15 * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Zaokrąglone rogi\n  if (options.features.roundedCorners) {\n    addons.push({\n      name: 'Zaokrąglanie rogów',\n      quantity: quantity,\n      unit: 'szt',\n      unitPrice: 25,\n      totalPrice: 25 * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Paski antypoślizgowe\n  if (options.features.antiSlipStrips) {\n    addons.push({\n      name: 'Paski antypoślizgowe',\n      quantity: options.shelvesCount * quantity,\n      unit: 'kpl',\n      unitPrice: 5,\n      totalPrice: options.shelvesCount * 5 * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Elementy montażowe\n  addons.push({\n    name: 'Kątowniki montażowe',\n    quantity: (4 + options.shelvesCount * 2) * quantity,\n    unit: 'szt',\n    unitPrice: 1.5,\n    totalPrice: (4 + options.shelvesCount * 2) * 1.5 * quantity,\n    appliesToMultiplier: false\n  });\n\n  return addons;\n}"],"mappings":"AAAA;;AAIA,SAASA,cAAc,QAAQ,sBAAsB;AAErD,MAAMC,iBAAiB,GAAG,GAAG;AAC7B,MAAMC,gBAAgB,GAAG,IAAI,CAAC,CAAC;AAC/B,MAAMC,sBAAsB,GAAG,EAAE,CAAC,CAAC;;AAEnC,OAAO,SAASC,qBAAqBA,CACnCC,UAA4D,EAC5DC,OAA4B,EAC5BC,QAAgB,EACS;EACzB,MAAMC,UAAkC,GAAG,EAAE;EAC7C,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGN,UAAU;EAC3C,MAAMO,aAAa,GAAGN,OAAO,CAACO,QAAQ,CAACC,mBAAmB,GACtDR,OAAO,CAACM,aAAa,GACrBT,sBAAsB;;EAE1B;EACA,MAAMY,kBAAkB,GAAGT,OAAO,CAACU,SAAS,KAAK,OAAO,GAAG,EAAE,GAAG,EAAE;;EAElE;EACAR,UAAU,CAACS,IAAI,CAAC;IACdC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,MAAM;IACZd,UAAU,EAAE;MAAEI,KAAK;MAAEC,MAAM;MAAEC,KAAK,EAAE;IAAE,CAAC;IACvCS,OAAO,EAAGX,KAAK,GAAGC,MAAM,GAAI,GAAG;IAC/BW,MAAM,EAAE,CAAC;IACTC,UAAU,EAAE,CAAC,IAAIb,KAAK,GAAGC,MAAM,CAAC,GAAG,IAAI;IACvCa,YAAY,EAAE;EAChB,CAAC,CAAC;;EAEF;EACAf,UAAU,CAACS,IAAI,CAAC;IACdC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,MAAM;IACZd,UAAU,EAAE;MAAEI,KAAK,EAAEE,KAAK;MAAED,MAAM;MAAEC,KAAK,EAAE;IAAE,CAAC;IAC9CS,OAAO,EAAGT,KAAK,GAAGD,MAAM,GAAI,GAAG;IAC/BW,MAAM,EAAE,CAAC;IACTC,UAAU,EAAE,CAAC,IAAIX,KAAK,GAAGD,MAAM,CAAC,GAAG,IAAI;IACvCa,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFf,UAAU,CAACS,IAAI,CAAC;IACdC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE,MAAM;IACZd,UAAU,EAAE;MAAEI,KAAK,EAAEE,KAAK;MAAED,MAAM;MAAEC,KAAK,EAAE;IAAE,CAAC;IAC9CS,OAAO,EAAGT,KAAK,GAAGD,MAAM,GAAI,GAAG;IAC/BW,MAAM,EAAE,CAAC;IACTC,UAAU,EAAE,CAAC,IAAIX,KAAK,GAAGD,MAAM,CAAC,GAAG,IAAI;IACvCa,YAAY,EAAE;EAChB,CAAC,CAAC;;EAEF;EACA,IAAIC,kBAAkB,GAAG,CAAC;EAE1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,OAAO,CAACoB,YAAY,EAAED,CAAC,EAAE,EAAE;IAC7C;IACAjB,UAAU,CAACS,IAAI,CAAC;MACdC,IAAI,EAAE,SAASO,CAAC,GAAG,CAAC,EAAE;MACtBN,IAAI,EAAE,OAAO;MACbd,UAAU,EAAE;QAAEI,KAAK;QAAEC,MAAM,EAAEC,KAAK;QAAEA,KAAK,EAAE;MAAE,CAAC;MAC9CS,OAAO,EAAGX,KAAK,GAAGE,KAAK,GAAI,GAAG;MAC9BU,MAAM,EAAE,CAAC;MACTC,UAAU,EAAE,CAAC,IAAIb,KAAK,GAAGE,KAAK,CAAC,GAAG,IAAI;MACtCY,YAAY,EAAE;IAChB,CAAC,CAAC;;IAEF;IACAf,UAAU,CAACS,IAAI,CAAC;MACdC,IAAI,EAAE,qBAAqBO,CAAC,GAAG,CAAC,EAAE;MAClCN,IAAI,EAAE,SAAS;MACfd,UAAU,EAAE;QAAEI,KAAK;QAAEC,MAAM,EAAEE,aAAa;QAAED,KAAK,EAAE;MAAE,CAAC;MACtDS,OAAO,EAAGX,KAAK,GAAGG,aAAa,GAAI,GAAG;MACtCS,MAAM,EAAE,CAAC;MACTC,UAAU,EAAE,CAAC,IAAIb,KAAK,GAAGG,aAAa,CAAC,GAAG,IAAI;MAC9CW,YAAY,EAAE;IAChB,CAAC,CAAC;;IAEF;IACAC,kBAAkB,IAAIf,KAAK,GAAG,IAAI,CAAC,CAAC;EACtC;;EAEA;EACA,MAAMkB,YAAY,GAAGnB,UAAU,CAACoB,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACV,OAAO,EAAE,CAAC,CAAC;EACtE,MAAMW,gBAAgB,GAAGJ,YAAY,IAAI,CAAC,GAAGzB,gBAAgB,CAAC;;EAE9D;EACA,MAAMqB,YAAY,GAAGQ,gBAAgB,GAAGhB,kBAAkB,GAAGT,OAAO,CAAC0B,SAAS,GAC1D/B,iBAAiB,GAAGM,QAAQ;;EAEhD;EACA,MAAM0B,oBAAoB,GAAGjC,cAAc,CAACM,OAAO,CAAC0B,SAAS,CAAgC,IAAI,CAAC;EAClG,MAAME,WAAW,GAAGV,kBAAkB,GAAGS,oBAAoB,GAAG1B,QAAQ;;EAExE;EACA,IAAI4B,YAAY,GAAG,CAAC;EACpB,IAAIC,eAAe,GAAG,CAAC;EAEvB,IAAI9B,OAAO,CAAC+B,QAAQ,CAACC,OAAO,IAAIhC,OAAO,CAAC+B,QAAQ,CAAClB,IAAI,KAAK,MAAM,EAAE;IAChE;IACA,IAAIb,OAAO,CAAC+B,QAAQ,CAACE,QAAQ,KAAK,WAAW,EAAE;MAC7C;MACAH,eAAe,GAAI3B,KAAK,GAAGC,MAAM,GAAI,GAAG;IAC1C,CAAC,MAAM;MACL;MACA0B,eAAe,GAAG,CAAE3B,KAAK,GAAGC,MAAM,GAAI,CAAC,IAAIC,KAAK,GAAGD,MAAM,CAAC,IAAI,GAAG;IACnE;IAEA,MAAM8B,aAAa,GAAGlC,OAAO,CAAC+B,QAAQ,CAAClB,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,EAAE;IACnEgB,YAAY,GAAGC,eAAe,GAAGI,aAAa,GAAGjC,QAAQ;EAC3D;;EAEA;EACA,MAAMkC,eAGJ,GAAG,EAAE;EAEP,IAAInC,OAAO,CAACO,QAAQ,CAAC6B,iBAAiB,EAAE;IACtC;IACA,MAAMC,WAAW,GAAGnC,UAAU,CAC3BoC,MAAM,CAACd,CAAC,IAAIA,CAAC,CAACX,IAAI,KAAK,OAAO,CAAC,CAC/BS,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACV,OAAO,EAAE,CAAC,CAAC,GACvCL,kBAAkB,GAAGT,OAAO,CAAC0B,SAAS,GAAG,GAAG,GAAGzB,QAAQ;IAEzDkC,eAAe,CAACxB,IAAI,CAAC;MACnBC,IAAI,EAAE,mBAAmB;MACzB2B,IAAI,EAAEF;IACR,CAAC,CAAC;EACJ;EAEA,IAAIrC,OAAO,CAACO,QAAQ,CAACiC,cAAc,EAAE;IACnCL,eAAe,CAACxB,IAAI,CAAC;MACnBC,IAAI,EAAE,oBAAoB;MAC1B2B,IAAI,EAAE,EAAE,GAAGtC,QAAQ,CAAC;IACtB,CAAC,CAAC;EACJ;EAEA,IAAID,OAAO,CAACO,QAAQ,CAACkC,cAAc,EAAE;IACnCN,eAAe,CAACxB,IAAI,CAAC;MACnBC,IAAI,EAAE,sBAAsB;MAC5B2B,IAAI,EAAEvC,OAAO,CAACoB,YAAY,GAAG,CAAC,GAAGnB,QAAQ,CAAC;IAC5C,CAAC,CAAC;EACJ;EAEA,MAAMyC,oBAAoB,GAAGP,eAAe,CAACb,MAAM,CAAC,CAACC,GAAG,EAAEoB,IAAI,KAAKpB,GAAG,GAAGoB,IAAI,CAACJ,IAAI,EAAE,CAAC,CAAC;;EAEtF;EACA,MAAMK,YAAY,GAAG,IAAI,CAAC,CAAC;EAC3B,MAAMC,WAAW,GAAGxB,YAAY,IAAIrB,OAAO,CAAC0B,SAAS,GAAG,IAAI,CAAC,GAAGkB,YAAY,GAAG3C,QAAQ;;EAEvF;EACA,MAAM6C,SAAS,GAAG7B,YAAY,GAAGW,WAAW,GAAGC,YAAY,GAAGa,oBAAoB;EAElF,MAAMK,kBAAkB,GAAG7C,UAAU,CAClCoC,MAAM,CAACd,CAAC,IAAIA,CAAC,CAACX,IAAI,KAAK,MAAM,IAAIW,CAAC,CAACX,IAAI,KAAK,OAAO,IAAIW,CAAC,CAACX,IAAI,KAAK,SAAS,CAAC,CAC5EmC,GAAG,CAACxB,CAAC,KAAK;IACTZ,IAAI,EAAEY,CAAC,CAACZ,IAAI;IACZC,IAAI,EAAEW,CAAC,CAACX,IAAoC;IAC5CC,OAAO,EAAEU,CAAC,CAACV,OAAO;IAClBmC,aAAa,EAAEzB,CAAC,CAACX,IAAI,KAAK,SAAS,GAAGV,KAAK,GAAG,IAAI,GAAG+C;EACvD,CAAC,CAAC,CAAC;EAEL,OAAO;IACLhD,UAAU,EAAE6C,kBAAkB;IAC9B9B,YAAY;IACZY,YAAY;IACZD,WAAW;IACXkB,SAAS;IACTK,iBAAiB,EAAE;MACjBC,UAAU,EAAE/C,KAAK;MACjBC,aAAa,EAAEA,aAAa;MAC5B+C,qBAAqB,EAAEhD,KAAK,GAAGC;IACjC,CAAC;IACDe,YAAY,EAAEA,YAAY,GAAGpB,QAAQ;IACrC4C;EACF,CAAC;AACH;;AAEA;AACA,OAAO,SAASS,eAAeA,CAC7BtD,OAA4B,EAC5BD,UAA4D,EAC5DE,QAAgB,EAQf;EACD,MAAMsD,MAAM,GAAG,EAAE;;EAEjB;EACA,MAAMN,aAAa,GAAIlD,UAAU,CAACI,KAAK,GAAGH,OAAO,CAACoB,YAAY,GAAI,IAAI;EACtE,MAAMoC,YAAY,GAAG9D,cAAc,CAACM,OAAO,CAAC0B,SAAS,CAAgC,IAAI,CAAC;EAE1F6B,MAAM,CAAC5C,IAAI,CAAC;IACVC,IAAI,EAAE,gCAAgC;IACtCX,QAAQ,EAAEgD,aAAa,GAAGhD,QAAQ;IAClCwD,IAAI,EAAE,IAAI;IACVC,SAAS,EAAEF,YAAY;IACvBG,UAAU,EAAEV,aAAa,GAAGO,YAAY,GAAGvD,QAAQ;IACnD2D,mBAAmB,EAAE;EACvB,CAAC,CAAC;;EAEF;EACA,IAAI5D,OAAO,CAAC+B,QAAQ,CAACC,OAAO,IAAIhC,OAAO,CAAC+B,QAAQ,CAAClB,IAAI,KAAK,MAAM,EAAE;IAChE,IAAIiB,eAAe,GAAG,CAAC;IAEvB,IAAI9B,OAAO,CAAC+B,QAAQ,CAACE,QAAQ,KAAK,WAAW,EAAE;MAC7CH,eAAe,GAAI/B,UAAU,CAACI,KAAK,GAAGJ,UAAU,CAACK,MAAM,GAAI,GAAG;IAChE,CAAC,MAAM;MACL0B,eAAe,GAAG,CAAE/B,UAAU,CAACI,KAAK,GAAGJ,UAAU,CAACK,MAAM,GACtC,CAAC,IAAIL,UAAU,CAACM,KAAK,GAAGN,UAAU,CAACK,MAAM,CAAC,IAAI,GAAG;IACrE;IAEAmD,MAAM,CAAC5C,IAAI,CAAC;MACVC,IAAI,EAAE,WAAWZ,OAAO,CAAC+B,QAAQ,CAAClB,IAAI,KAAK,QAAQ,GAAG,YAAY,GAAG,cAAc,EAAE;MACrFZ,QAAQ,EAAE6B,eAAe,GAAG7B,QAAQ;MACpCwD,IAAI,EAAE,IAAI;MACVC,SAAS,EAAE1D,OAAO,CAAC+B,QAAQ,CAAClB,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,EAAE;MACxD8C,UAAU,EAAE7B,eAAe,IAAI9B,OAAO,CAAC+B,QAAQ,CAAClB,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAC,GAAGZ,QAAQ;MACxF2D,mBAAmB,EAAE;IACvB,CAAC,CAAC;EACJ;;EAEA;EACA,IAAI5D,OAAO,CAACO,QAAQ,CAAC6B,iBAAiB,EAAE;IACtCmB,MAAM,CAAC5C,IAAI,CAAC;MACVC,IAAI,EAAE,mBAAmB;MACzBX,QAAQ,EAAED,OAAO,CAACoB,YAAY,GAAGnB,QAAQ;MACzCwD,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE3D,OAAO,CAACoB,YAAY,GAAG,EAAE,GAAGnB,QAAQ;MAChD2D,mBAAmB,EAAE;IACvB,CAAC,CAAC;EACJ;;EAEA;EACA,IAAI5D,OAAO,CAACO,QAAQ,CAACiC,cAAc,EAAE;IACnCe,MAAM,CAAC5C,IAAI,CAAC;MACVC,IAAI,EAAE,oBAAoB;MAC1BX,QAAQ,EAAEA,QAAQ;MAClBwD,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE,GAAG1D,QAAQ;MACzB2D,mBAAmB,EAAE;IACvB,CAAC,CAAC;EACJ;;EAEA;EACA,IAAI5D,OAAO,CAACO,QAAQ,CAACkC,cAAc,EAAE;IACnCc,MAAM,CAAC5C,IAAI,CAAC;MACVC,IAAI,EAAE,sBAAsB;MAC5BX,QAAQ,EAAED,OAAO,CAACoB,YAAY,GAAGnB,QAAQ;MACzCwD,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE3D,OAAO,CAACoB,YAAY,GAAG,CAAC,GAAGnB,QAAQ;MAC/C2D,mBAAmB,EAAE;IACvB,CAAC,CAAC;EACJ;;EAEA;EACAL,MAAM,CAAC5C,IAAI,CAAC;IACVC,IAAI,EAAE,qBAAqB;IAC3BX,QAAQ,EAAE,CAAC,CAAC,GAAGD,OAAO,CAACoB,YAAY,GAAG,CAAC,IAAInB,QAAQ;IACnDwD,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE,GAAG;IACdC,UAAU,EAAE,CAAC,CAAC,GAAG3D,OAAO,CAACoB,YAAY,GAAG,CAAC,IAAI,GAAG,GAAGnB,QAAQ;IAC3D2D,mBAAmB,EAAE;EACvB,CAAC,CAAC;EAEF,OAAOL,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}