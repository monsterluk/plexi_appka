{"ast":null,"code":"// calculators/calculateImpulsKasowy.ts\nimport{BENDING_PRICES}from'../constants/pricing';const IMPULS_MULTIPLIER=1.8;const WASTE_PERCENTAGE=0.05;// 5% odpadu\nconst DEFAULT_LIMITER_HEIGHT=60;// mm\nexport function calculateImpulsKasowy(dimensions,options,quantity){const components=[];const{width,height,depth}=dimensions;const limiterHeight=options.features.customLimiterHeight?options.limiterHeight:DEFAULT_LIMITER_HEIGHT;// Cena materiału bazowego\nconst materialPricePerM2=options.plexiType==='white'?35:30;// 1. PLECY\ncomponents.push({name:'Plecy',type:'wall',dimensions:{width,height,depth:0},surface:width*height/1e6,weight:0,edgeLength:2*(width+height)/1000,materialCost:0});// 2. BOKI (2 sztuki)\ncomponents.push({name:'Lewy bok',type:'wall',dimensions:{width:depth,height,depth:0},surface:depth*height/1e6,weight:0,edgeLength:2*(depth+height)/1000,materialCost:0});components.push({name:'Prawy bok',type:'wall',dimensions:{width:depth,height,depth:0},surface:depth*height/1e6,weight:0,edgeLength:2*(depth+height)/1000,materialCost:0});// 3. PÓŁKI Z OGRANICZNIKAMI\nlet totalBendingLength=0;for(let i=0;i<options.shelvesCount;i++){// Półka\ncomponents.push({name:\"P\\xF3\\u0142ka \".concat(i+1),type:'shelf',dimensions:{width,height:depth,depth:0},surface:width*depth/1e6,weight:0,edgeLength:2*(width+depth)/1000,materialCost:0});// Ogranicznik (zagięty front półki)\ncomponents.push({name:\"Ogranicznik p\\xF3\\u0142ki \".concat(i+1),type:'limiter',dimensions:{width,height:limiterHeight,depth:0},surface:width*limiterHeight/1e6,weight:0,edgeLength:2*(width+limiterHeight)/1000,materialCost:0});// Długość gięcia dla ogranicznika\ntotalBendingLength+=width/1000;// konwersja na metry\n}// 4. OBLICZENIA POWIERZCHNI I KOSZTÓW\nconst totalSurface=components.reduce((sum,c)=>sum+c.surface,0);const surfaceWithWaste=totalSurface*(1+WASTE_PERCENTAGE);// Koszt materiału z mnożnikiem\nconst materialCost=surfaceWithWaste*materialPricePerM2*options.thickness*IMPULS_MULTIPLIER*quantity;// Koszt gięcia na gorąco\nconst bendingPricePerMeter=BENDING_PRICES[options.thickness]||5;const bendingCost=totalBendingLength*bendingPricePerMeter*quantity;// 5. GRAFIKA (bez mnożnika)\nlet graphicsCost=0;let graphicsSurface=0;if(options.graphics.enabled&&options.graphics.type!=='none'){// Powierzchnia do pokrycia grafiką\nif(options.graphics.coverage==='back-only'){// Tylko plecy\ngraphicsSurface=width*height/1e6;}else{// Plecy + boki\ngraphicsSurface=(width*height+2*(depth*height))/1e6;}const graphicsPrice=options.graphics.type==='double'?150:75;graphicsCost=graphicsSurface*graphicsPrice*quantity;}// 6. KOSZTY DODATKÓW\nconst additionalCosts=[];if(options.features.reinforcedShelves){// Dodatkowa grubość półek (+50% kosztu półek)\nconst shelvesCost=components.filter(c=>c.type==='shelf').reduce((sum,c)=>sum+c.surface,0)*materialPricePerM2*options.thickness*0.5*quantity;additionalCosts.push({name:'Wzmocnienie półek',cost:shelvesCost});}if(options.features.roundedCorners){additionalCosts.push({name:'Zaokrąglanie rogów',cost:25*quantity// stała cena za sztukę\n});}if(options.features.antiSlipStrips){additionalCosts.push({name:'Paski antypoślizgowe',cost:options.shelvesCount*5*quantity// 5 zł za półkę\n});}const totalAdditionalCosts=additionalCosts.reduce((sum,item)=>sum+item.cost,0);// 7. WAGA (przyjmując gęstość plexi 1190 kg/m³)\nconst plexiDensity=1190;// kg/m³\nconst totalWeight=totalSurface*(options.thickness/1000)*plexiDensity*quantity;// 8. PODSUMOWANIE\nconst totalCost=materialCost+bendingCost+graphicsCost+totalAdditionalCosts;const filteredComponents=components.filter(c=>c.type==='wall'||c.type==='shelf'||c.type==='limiter').map(c=>({name:c.name,type:c.type,surface:c.surface,bendingLength:c.type==='limiter'?width/1000:undefined}));return{components:filteredComponents,materialCost,graphicsCost,bendingCost,totalCost,shelvesDimensions:{shelfDepth:depth,limiterHeight:limiterHeight,totalDepthWithLimiter:depth+limiterHeight},totalSurface:totalSurface*quantity,totalWeight};}// Funkcja pomocnicza do generowania listy dodatków dla systemu\nexport function getImpulsAddons(options,dimensions,quantity){const addons=[];// Gięcie na gorąco\nconst bendingLength=dimensions.width*options.shelvesCount/1000;const bendingPrice=BENDING_PRICES[options.thickness]||5;addons.push({name:'Gięcie na gorąco ograniczników',quantity:bendingLength*quantity,unit:'mb',unitPrice:bendingPrice,totalPrice:bendingLength*bendingPrice*quantity,appliesToMultiplier:false});// Grafika\nif(options.graphics.enabled&&options.graphics.type!=='none'){let graphicsSurface=0;if(options.graphics.coverage==='back-only'){graphicsSurface=dimensions.width*dimensions.height/1e6;}else{graphicsSurface=(dimensions.width*dimensions.height+2*(dimensions.depth*dimensions.height))/1e6;}addons.push({name:\"Grafika \".concat(options.graphics.type==='double'?'dwustronna':'jednostronna'),quantity:graphicsSurface*quantity,unit:'m²',unitPrice:options.graphics.type==='double'?150:75,totalPrice:graphicsSurface*(options.graphics.type==='double'?150:75)*quantity,appliesToMultiplier:false});}// Wzmocnione półki\nif(options.features.reinforcedShelves){addons.push({name:'Wzmocnienie półek',quantity:options.shelvesCount*quantity,unit:'szt',unitPrice:15,totalPrice:options.shelvesCount*15*quantity,appliesToMultiplier:false});}// Zaokrąglone rogi\nif(options.features.roundedCorners){addons.push({name:'Zaokrąglanie rogów',quantity:quantity,unit:'szt',unitPrice:25,totalPrice:25*quantity,appliesToMultiplier:false});}// Paski antypoślizgowe\nif(options.features.antiSlipStrips){addons.push({name:'Paski antypoślizgowe',quantity:options.shelvesCount*quantity,unit:'kpl',unitPrice:5,totalPrice:options.shelvesCount*5*quantity,appliesToMultiplier:false});}// Elementy montażowe\naddons.push({name:'Kątowniki montażowe',quantity:(4+options.shelvesCount*2)*quantity,unit:'szt',unitPrice:1.5,totalPrice:(4+options.shelvesCount*2)*1.5*quantity,appliesToMultiplier:false});return addons;}","map":{"version":3,"names":["BENDING_PRICES","IMPULS_MULTIPLIER","WASTE_PERCENTAGE","DEFAULT_LIMITER_HEIGHT","calculateImpulsKasowy","dimensions","options","quantity","components","width","height","depth","limiterHeight","features","customLimiterHeight","materialPricePerM2","plexiType","push","name","type","surface","weight","edgeLength","materialCost","totalBendingLength","i","shelvesCount","concat","totalSurface","reduce","sum","c","surfaceWithWaste","thickness","bendingPricePerMeter","bendingCost","graphicsCost","graphicsSurface","graphics","enabled","coverage","graphicsPrice","additionalCosts","reinforcedShelves","shelvesCost","filter","cost","roundedCorners","antiSlipStrips","totalAdditionalCosts","item","plexiDensity","totalWeight","totalCost","filteredComponents","map","bendingLength","undefined","shelvesDimensions","shelfDepth","totalDepthWithLimiter","getImpulsAddons","addons","bendingPrice","unit","unitPrice","totalPrice","appliesToMultiplier"],"sources":["/Users/lukaszsikorra/Projects/plexi_appka/src/calculators/calculateImpulsKasowy.ts"],"sourcesContent":["// calculators/calculateImpulsKasowy.ts\n\nimport { ImpulsKasowyOptions, ImpulsCalculationResult } from '../types/impuls.types';\nimport { ComponentCalculation } from '../types/calculator.types';\nimport { BENDING_PRICES } from '../constants/pricing';\n\nconst IMPULS_MULTIPLIER = 1.8;\nconst WASTE_PERCENTAGE = 0.05; // 5% odpadu\nconst DEFAULT_LIMITER_HEIGHT = 60; // mm\n\nexport function calculateImpulsKasowy(\n  dimensions: { width: number; height: number; depth: number },\n  options: ImpulsKasowyOptions,\n  quantity: number\n): ImpulsCalculationResult {\n  const components: ComponentCalculation[] = [];\n  const { width, height, depth } = dimensions;\n  const limiterHeight = options.features.customLimiterHeight \n    ? options.limiterHeight \n    : DEFAULT_LIMITER_HEIGHT;\n\n  // Cena materiału bazowego\n  const materialPricePerM2 = options.plexiType === 'white' ? 35 : 30;\n\n  // 1. PLECY\n  components.push({\n    name: 'Plecy',\n    type: 'wall',\n    dimensions: { width, height, depth: 0 },\n    surface: (width * height) / 1e6,\n    weight: 0,\n    edgeLength: 2 * (width + height) / 1000,\n    materialCost: 0\n  });\n\n  // 2. BOKI (2 sztuki)\n  components.push({\n    name: 'Lewy bok',\n    type: 'wall',\n    dimensions: { width: depth, height, depth: 0 },\n    surface: (depth * height) / 1e6,\n    weight: 0,\n    edgeLength: 2 * (depth + height) / 1000,\n    materialCost: 0\n  });\n\n  components.push({\n    name: 'Prawy bok',\n    type: 'wall',\n    dimensions: { width: depth, height, depth: 0 },\n    surface: (depth * height) / 1e6,\n    weight: 0,\n    edgeLength: 2 * (depth + height) / 1000,\n    materialCost: 0\n  });\n\n  // 3. PÓŁKI Z OGRANICZNIKAMI\n  let totalBendingLength = 0;\n  \n  for (let i = 0; i < options.shelvesCount; i++) {\n    // Półka\n    components.push({\n      name: `Półka ${i + 1}`,\n      type: 'shelf',\n      dimensions: { width, height: depth, depth: 0 },\n      surface: (width * depth) / 1e6,\n      weight: 0,\n      edgeLength: 2 * (width + depth) / 1000,\n      materialCost: 0\n    });\n\n    // Ogranicznik (zagięty front półki)\n    components.push({\n      name: `Ogranicznik półki ${i + 1}`,\n      type: 'limiter',\n      dimensions: { width, height: limiterHeight, depth: 0 },\n      surface: (width * limiterHeight) / 1e6,\n      weight: 0,\n      edgeLength: 2 * (width + limiterHeight) / 1000,\n      materialCost: 0\n    });\n\n    // Długość gięcia dla ogranicznika\n    totalBendingLength += width / 1000; // konwersja na metry\n  }\n\n  // 4. OBLICZENIA POWIERZCHNI I KOSZTÓW\n  const totalSurface = components.reduce((sum, c) => sum + c.surface, 0);\n  const surfaceWithWaste = totalSurface * (1 + WASTE_PERCENTAGE);\n\n  // Koszt materiału z mnożnikiem\n  const materialCost = surfaceWithWaste * materialPricePerM2 * options.thickness * \n                      IMPULS_MULTIPLIER * quantity;\n\n  // Koszt gięcia na gorąco\n  const bendingPricePerMeter = BENDING_PRICES[options.thickness as keyof typeof BENDING_PRICES] || 5;\n  const bendingCost = totalBendingLength * bendingPricePerMeter * quantity;\n\n  // 5. GRAFIKA (bez mnożnika)\n  let graphicsCost = 0;\n  let graphicsSurface = 0;\n\n  if (options.graphics.enabled && options.graphics.type !== 'none') {\n    // Powierzchnia do pokrycia grafiką\n    if (options.graphics.coverage === 'back-only') {\n      // Tylko plecy\n      graphicsSurface = (width * height) / 1e6;\n    } else {\n      // Plecy + boki\n      graphicsSurface = ((width * height) + 2 * (depth * height)) / 1e6;\n    }\n\n    const graphicsPrice = options.graphics.type === 'double' ? 150 : 75;\n    graphicsCost = graphicsSurface * graphicsPrice * quantity;\n  }\n\n  // 6. KOSZTY DODATKÓW\n  const additionalCosts: Array<{\n    name: string;\n    cost: number;\n  }> = [];\n\n  if (options.features.reinforcedShelves) {\n    // Dodatkowa grubość półek (+50% kosztu półek)\n    const shelvesCost = components\n      .filter(c => c.type === 'shelf')\n      .reduce((sum, c) => sum + c.surface, 0) * \n      materialPricePerM2 * options.thickness * 0.5 * quantity;\n    \n    additionalCosts.push({\n      name: 'Wzmocnienie półek',\n      cost: shelvesCost\n    });\n  }\n\n  if (options.features.roundedCorners) {\n    additionalCosts.push({\n      name: 'Zaokrąglanie rogów',\n      cost: 25 * quantity // stała cena za sztukę\n    });\n  }\n\n  if (options.features.antiSlipStrips) {\n    additionalCosts.push({\n      name: 'Paski antypoślizgowe',\n      cost: options.shelvesCount * 5 * quantity // 5 zł za półkę\n    });\n  }\n\n  const totalAdditionalCosts = additionalCosts.reduce((sum, item) => sum + item.cost, 0);\n\n  // 7. WAGA (przyjmując gęstość plexi 1190 kg/m³)\n  const plexiDensity = 1190; // kg/m³\n  const totalWeight = totalSurface * (options.thickness / 1000) * plexiDensity * quantity;\n\n  // 8. PODSUMOWANIE\n  const totalCost = materialCost + bendingCost + graphicsCost + totalAdditionalCosts;\n\n  const filteredComponents = components\n    .filter(c => c.type === 'wall' || c.type === 'shelf' || c.type === 'limiter')\n    .map(c => ({\n      name: c.name,\n      type: c.type as 'wall' | 'shelf' | 'limiter',\n      surface: c.surface,\n      bendingLength: c.type === 'limiter' ? width / 1000 : undefined\n    }));\n\n  return {\n    components: filteredComponents,\n    materialCost,\n    graphicsCost,\n    bendingCost,\n    totalCost,\n    shelvesDimensions: {\n      shelfDepth: depth,\n      limiterHeight: limiterHeight,\n      totalDepthWithLimiter: depth + limiterHeight\n    },\n    totalSurface: totalSurface * quantity,\n    totalWeight\n  };\n}\n\n// Funkcja pomocnicza do generowania listy dodatków dla systemu\nexport function getImpulsAddons(\n  options: ImpulsKasowyOptions,\n  dimensions: { width: number; height: number; depth: number },\n  quantity: number\n): Array<{\n  name: string;\n  quantity: number;\n  unit: string;\n  unitPrice: number;\n  totalPrice: number;\n  appliesToMultiplier: boolean;\n}> {\n  const addons = [];\n\n  // Gięcie na gorąco\n  const bendingLength = (dimensions.width * options.shelvesCount) / 1000;\n  const bendingPrice = BENDING_PRICES[options.thickness as keyof typeof BENDING_PRICES] || 5;\n  \n  addons.push({\n    name: 'Gięcie na gorąco ograniczników',\n    quantity: bendingLength * quantity,\n    unit: 'mb',\n    unitPrice: bendingPrice,\n    totalPrice: bendingLength * bendingPrice * quantity,\n    appliesToMultiplier: false\n  });\n\n  // Grafika\n  if (options.graphics.enabled && options.graphics.type !== 'none') {\n    let graphicsSurface = 0;\n    \n    if (options.graphics.coverage === 'back-only') {\n      graphicsSurface = (dimensions.width * dimensions.height) / 1e6;\n    } else {\n      graphicsSurface = ((dimensions.width * dimensions.height) + \n                        2 * (dimensions.depth * dimensions.height)) / 1e6;\n    }\n\n    addons.push({\n      name: `Grafika ${options.graphics.type === 'double' ? 'dwustronna' : 'jednostronna'}`,\n      quantity: graphicsSurface * quantity,\n      unit: 'm²',\n      unitPrice: options.graphics.type === 'double' ? 150 : 75,\n      totalPrice: graphicsSurface * (options.graphics.type === 'double' ? 150 : 75) * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Wzmocnione półki\n  if (options.features.reinforcedShelves) {\n    addons.push({\n      name: 'Wzmocnienie półek',\n      quantity: options.shelvesCount * quantity,\n      unit: 'szt',\n      unitPrice: 15,\n      totalPrice: options.shelvesCount * 15 * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Zaokrąglone rogi\n  if (options.features.roundedCorners) {\n    addons.push({\n      name: 'Zaokrąglanie rogów',\n      quantity: quantity,\n      unit: 'szt',\n      unitPrice: 25,\n      totalPrice: 25 * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Paski antypoślizgowe\n  if (options.features.antiSlipStrips) {\n    addons.push({\n      name: 'Paski antypoślizgowe',\n      quantity: options.shelvesCount * quantity,\n      unit: 'kpl',\n      unitPrice: 5,\n      totalPrice: options.shelvesCount * 5 * quantity,\n      appliesToMultiplier: false\n    });\n  }\n\n  // Elementy montażowe\n  addons.push({\n    name: 'Kątowniki montażowe',\n    quantity: (4 + options.shelvesCount * 2) * quantity,\n    unit: 'szt',\n    unitPrice: 1.5,\n    totalPrice: (4 + options.shelvesCount * 2) * 1.5 * quantity,\n    appliesToMultiplier: false\n  });\n\n  return addons;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}