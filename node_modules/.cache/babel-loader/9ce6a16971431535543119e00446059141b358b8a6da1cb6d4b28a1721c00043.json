{"ast":null,"code":"// src/calculators/formatkaCalculator.ts\nconst MATERIAL_PRICES={plexi:30,hips:25,petg:35,pc:45};const MATERIAL_DENSITIES={plexi:1.19,hips:1.05,petg:1.27,pc:1.20};const ADDON_PRICES={polishedEdges:9,// zł/mb\nroundedCorners:15,// zł/narożnik\ndrillHoles:2// zł/otwór\n};export function calculateFormatka(options){var _options$finishing,_options$finishing2,_options$finishing3;// Wartości domyślne\nconst width=options.width||1000;const height=options.height||500;const quantity=options.quantity||1;const thickness=options.thickness||3;// Powierzchnia w m²\nconst surface=width*height*quantity/1000000;// Koszt materiału\nconst materialPricePerM2=MATERIAL_PRICES[options.material];const materialCost=surface*materialPricePerM2*thickness*1.8;// mnożnik 1.8\n// Waga\nconst density=MATERIAL_DENSITIES[options.material];const volume=surface*(thickness/1000);// objętość w m³\nconst weight=volume*density*1000;// waga w kg\n// Koszty dodatków\nlet addonsCost=0;const breakdown={};if((_options$finishing=options.finishing)!==null&&_options$finishing!==void 0&&_options$finishing.polishedEdges){const edgeLength=2*(width+height)/1000*quantity;// mb\nconst polishingCost=edgeLength*ADDON_PRICES.polishedEdges;addonsCost+=polishingCost;breakdown.polishedEdges=polishingCost;}if((_options$finishing2=options.finishing)!==null&&_options$finishing2!==void 0&&_options$finishing2.roundedCorners){const cornersCost=4*quantity*ADDON_PRICES.roundedCorners;addonsCost+=cornersCost;breakdown.roundedCorners=cornersCost;}if((_options$finishing3=options.finishing)!==null&&_options$finishing3!==void 0&&_options$finishing3.drillHoles&&options.finishing.drillHoles>0){const holesCost=options.finishing.drillHoles*quantity*ADDON_PRICES.drillHoles;addonsCost+=holesCost;breakdown.drillHoles=holesCost;}return{surface,weight,materialCost,addonsCost,totalCost:materialCost+addonsCost,breakdown};}","map":{"version":3,"names":["MATERIAL_PRICES","plexi","hips","petg","pc","MATERIAL_DENSITIES","ADDON_PRICES","polishedEdges","roundedCorners","drillHoles","calculateFormatka","options","_options$finishing","_options$finishing2","_options$finishing3","width","height","quantity","thickness","surface","materialPricePerM2","material","materialCost","density","volume","weight","addonsCost","breakdown","finishing","edgeLength","polishingCost","cornersCost","holesCost","totalCost"],"sources":["/Users/lukaszsikorra/Projects/plexi_appka/src/calculators/formatkaCalculator.ts"],"sourcesContent":["// src/calculators/formatkaCalculator.ts\nimport { FormatkaOptions } from '../types/product.types';\nimport { CalculationResult } from '../types/calculator.types';\n\ninterface MaterialPrices {\n  [key: string]: number;\n}\n\nconst MATERIAL_PRICES: MaterialPrices = {\n  plexi: 30,\n  hips: 25,\n  petg: 35,\n  pc: 45\n};\n\nconst MATERIAL_DENSITIES: MaterialPrices = {\n  plexi: 1.19,\n  hips: 1.05,\n  petg: 1.27,\n  pc: 1.20\n};\n\nconst ADDON_PRICES = {\n  polishedEdges: 9, // zł/mb\n  roundedCorners: 15, // zł/narożnik\n  drillHoles: 2 // zł/otwór\n};\n\nexport function calculateFormatka(options: FormatkaOptions): CalculationResult {\n  // Wartości domyślne\n  const width = options.width || 1000;\n  const height = options.height || 500;\n  const quantity = options.quantity || 1;\n  const thickness = options.thickness || 3;\n  \n  // Powierzchnia w m²\n  const surface = (width * height * quantity) / 1_000_000;\n  \n  // Koszt materiału\n  const materialPricePerM2 = MATERIAL_PRICES[options.material];\n  const materialCost = surface * materialPricePerM2 * thickness * 1.8; // mnożnik 1.8\n  \n  // Waga\n  const density = MATERIAL_DENSITIES[options.material];\n  const volume = surface * (thickness / 1000); // objętość w m³\n  const weight = volume * density * 1000; // waga w kg\n  \n  // Koszty dodatków\n  let addonsCost = 0;\n  const breakdown: { [key: string]: number } = {};\n  \n  if (options.finishing?.polishedEdges) {\n    const edgeLength = 2 * (width + height) / 1000 * quantity; // mb\n    const polishingCost = edgeLength * ADDON_PRICES.polishedEdges;\n    addonsCost += polishingCost;\n    breakdown.polishedEdges = polishingCost;\n  }\n  \n  if (options.finishing?.roundedCorners) {\n    const cornersCost = 4 * quantity * ADDON_PRICES.roundedCorners;\n    addonsCost += cornersCost;\n    breakdown.roundedCorners = cornersCost;\n  }\n  \n  if (options.finishing?.drillHoles && options.finishing.drillHoles > 0) {\n    const holesCost = options.finishing.drillHoles * quantity * ADDON_PRICES.drillHoles;\n    addonsCost += holesCost;\n    breakdown.drillHoles = holesCost;\n  }\n  \n  return {\n    surface,\n    weight,\n    materialCost,\n    addonsCost,\n    totalCost: materialCost + addonsCost,\n    breakdown\n  };\n}"],"mappings":"AAAA;AAQA,KAAM,CAAAA,eAA+B,CAAG,CACtCC,KAAK,CAAE,EAAE,CACTC,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,EAAE,CACRC,EAAE,CAAE,EACN,CAAC,CAED,KAAM,CAAAC,kBAAkC,CAAG,CACzCJ,KAAK,CAAE,IAAI,CACXC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,IAAI,CACVC,EAAE,CAAE,IACN,CAAC,CAED,KAAM,CAAAE,YAAY,CAAG,CACnBC,aAAa,CAAE,CAAC,CAAE;AAClBC,cAAc,CAAE,EAAE,CAAE;AACpBC,UAAU,CAAE,CAAE;AAChB,CAAC,CAED,MAAO,SAAS,CAAAC,iBAAiBA,CAACC,OAAwB,CAAqB,KAAAC,kBAAA,CAAAC,mBAAA,CAAAC,mBAAA,CAC7E;AACA,KAAM,CAAAC,KAAK,CAAGJ,OAAO,CAACI,KAAK,EAAI,IAAI,CACnC,KAAM,CAAAC,MAAM,CAAGL,OAAO,CAACK,MAAM,EAAI,GAAG,CACpC,KAAM,CAAAC,QAAQ,CAAGN,OAAO,CAACM,QAAQ,EAAI,CAAC,CACtC,KAAM,CAAAC,SAAS,CAAGP,OAAO,CAACO,SAAS,EAAI,CAAC,CAExC;AACA,KAAM,CAAAC,OAAO,CAAIJ,KAAK,CAAGC,MAAM,CAAGC,QAAQ,CAAI,OAAS,CAEvD;AACA,KAAM,CAAAG,kBAAkB,CAAGpB,eAAe,CAACW,OAAO,CAACU,QAAQ,CAAC,CAC5D,KAAM,CAAAC,YAAY,CAAGH,OAAO,CAAGC,kBAAkB,CAAGF,SAAS,CAAG,GAAG,CAAE;AAErE;AACA,KAAM,CAAAK,OAAO,CAAGlB,kBAAkB,CAACM,OAAO,CAACU,QAAQ,CAAC,CACpD,KAAM,CAAAG,MAAM,CAAGL,OAAO,EAAID,SAAS,CAAG,IAAI,CAAC,CAAE;AAC7C,KAAM,CAAAO,MAAM,CAAGD,MAAM,CAAGD,OAAO,CAAG,IAAI,CAAE;AAExC;AACA,GAAI,CAAAG,UAAU,CAAG,CAAC,CAClB,KAAM,CAAAC,SAAoC,CAAG,CAAC,CAAC,CAE/C,IAAAf,kBAAA,CAAID,OAAO,CAACiB,SAAS,UAAAhB,kBAAA,WAAjBA,kBAAA,CAAmBL,aAAa,CAAE,CACpC,KAAM,CAAAsB,UAAU,CAAG,CAAC,EAAId,KAAK,CAAGC,MAAM,CAAC,CAAG,IAAI,CAAGC,QAAQ,CAAE;AAC3D,KAAM,CAAAa,aAAa,CAAGD,UAAU,CAAGvB,YAAY,CAACC,aAAa,CAC7DmB,UAAU,EAAII,aAAa,CAC3BH,SAAS,CAACpB,aAAa,CAAGuB,aAAa,CACzC,CAEA,IAAAjB,mBAAA,CAAIF,OAAO,CAACiB,SAAS,UAAAf,mBAAA,WAAjBA,mBAAA,CAAmBL,cAAc,CAAE,CACrC,KAAM,CAAAuB,WAAW,CAAG,CAAC,CAAGd,QAAQ,CAAGX,YAAY,CAACE,cAAc,CAC9DkB,UAAU,EAAIK,WAAW,CACzBJ,SAAS,CAACnB,cAAc,CAAGuB,WAAW,CACxC,CAEA,GAAI,CAAAjB,mBAAA,CAAAH,OAAO,CAACiB,SAAS,UAAAd,mBAAA,WAAjBA,mBAAA,CAAmBL,UAAU,EAAIE,OAAO,CAACiB,SAAS,CAACnB,UAAU,CAAG,CAAC,CAAE,CACrE,KAAM,CAAAuB,SAAS,CAAGrB,OAAO,CAACiB,SAAS,CAACnB,UAAU,CAAGQ,QAAQ,CAAGX,YAAY,CAACG,UAAU,CACnFiB,UAAU,EAAIM,SAAS,CACvBL,SAAS,CAAClB,UAAU,CAAGuB,SAAS,CAClC,CAEA,MAAO,CACLb,OAAO,CACPM,MAAM,CACNH,YAAY,CACZI,UAAU,CACVO,SAAS,CAAEX,YAAY,CAAGI,UAAU,CACpCC,SACF,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}