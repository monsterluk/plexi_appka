{"ast":null,"code":"import{useState,useEffect}from'react';export const useTheme=()=>{const[theme,setTheme]=useState(()=>{const savedTheme=localStorage.getItem('theme');return savedTheme||'light';});useEffect(()=>{document.documentElement.classList.remove('light','dark');document.documentElement.classList.add(theme);localStorage.setItem('theme',theme);},[theme]);const toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};return{theme,toggleTheme};};","map":{"version":3,"names":["useState","useEffect","useTheme","theme","setTheme","savedTheme","localStorage","getItem","document","documentElement","classList","remove","add","setItem","toggleTheme","prevTheme"],"sources":["/Users/lukaszsikorra/Projects/plexi_appka/src/hooks/useTheme.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\ntype Theme = 'light' | 'dark';\n\nexport const useTheme = () => {\n  const [theme, setTheme] = useState<Theme>(() => {\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    return savedTheme || 'light';\n  });\n\n  useEffect(() => {\n    document.documentElement.classList.remove('light', 'dark');\n    document.documentElement.classList.add(theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  return { theme, toggleTheme };\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAI3C,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGJ,QAAQ,CAAQ,IAAM,CAC9C,KAAM,CAAAK,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAU,CACzD,MAAO,CAAAF,UAAU,EAAI,OAAO,CAC9B,CAAC,CAAC,CAEFJ,SAAS,CAAC,IAAM,CACdO,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAE,MAAM,CAAC,CAC1DH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAACT,KAAK,CAAC,CAC7CG,YAAY,CAACO,OAAO,CAAC,OAAO,CAAEV,KAAK,CAAC,CACtC,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAW,WAAW,CAAGA,CAAA,GAAM,CACxBV,QAAQ,CAACW,SAAS,EAAIA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACjE,CAAC,CAED,MAAO,CAAEZ,KAAK,CAAEW,WAAY,CAAC,CAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}